<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.github.vindell</groupId>
	<artifactId>spring-boot-start-dropwizard-metrics</artifactId>
	<version>1.5.8-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-boot-start-dropwizard-metrics</name>
	<url>https://github.com/vindell/spring-boot-start-dropwizard-metrics</url>
	<description></description>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<dropwizard-metrics.version>3.2.5</dropwizard-metrics.version>
		<java.version>1.8</java.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<slf4j.version>1.7.25</slf4j.version>
		<guava.version>23.4-jre</guava.version>
	</properties>

	<repositories>
		<repository>
			<id>sonatype-nexus-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	
	<dependencyManagement>
		<dependencies>
			
			<!-- ###################### Metrics 3.x ###################### -->

			<!-- https://mvnrepository.com/artifact/io.dropwizard.metrics -->
	
			<!-- 基础依赖 -->
	
			<!-- A dependency-less package of just the annotations used by other Metrics 
				modules. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-annotation</artifactId>
				 <version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- Metrics is a Java library which gives you unparalleled insight into 
				what your code does in production. Metrics provides a powerful toolkit of 
				ways to measure the behavior of critical components in your production environment. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-core</artifactId>
				 <version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- An addition to Metrics which provides the ability to run application-specific 
				health checks, allowing you to check your application's heath in production. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-healthchecks</artifactId>
				 <version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A set of Jackson modules which provide serializers for most Metrics 
				classes. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-json</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			
			<!-- 监控扩展 -->

			<!-- An Apache HttpClient wrapper providing Metrics instrumentation of 
				connection pools, request durations and rates, and other useful information. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-httpclient</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- An Apache HttpAsyncClient wrapper providing Metrics instrumentation 
				of connection pools, request durations and rates, and other useful information. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-httpasyncclient</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- An instrumented filter for servlet environments. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-servlet</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- An Ehcache wrapper providing Metrics instrumentation of caches. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-ehcache</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- An instrumented appender for Logback. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-logback</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- An instrumented appender for Log4j 1.x. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-log4j</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- An instrumented appender for Log4j 2.x. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-log4j2</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- Metrics Integration for JCache, JSR 107 standard for caching. Uses 
				the CacheStatisticsMXBean provided statistics. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-jcache</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A JDBI wrapper providing Metrics instrumentation of query durations and rates. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-jdbi</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A set of extensions for Jetty 8 which provide instrumentation of thread 
				pools, connector metrics, and application latency and utilization. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-jetty8</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A set of extensions for Jetty 9.1 and higher which provide instrumentation 
				of thread pools, connector metrics, and application latency and utilization. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-jetty9</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A set of extensions for Jetty 9.0 which provide instrumentation of 
				thread pools, connector metrics, and application latency and utilization. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-jetty9-legacy</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A set of class providing Metrics integration for Jersey, the reference 
				JAX-RS implementation. This module is for the old Jersey 1.x -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-jersey</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A set of class providing Metrics integration for Jersey, the reference 
				JAX-RS implementation. -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-jersey2</artifactId>
				<version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A set of classes which allow you to monitor critical aspects of your 
				Java Virtual Machine using Metrics. -->
			<dependency>
			    <groupId>io.dropwizard.metrics</groupId>
			    <artifactId>metrics-jvm</artifactId>
			    <version>4.0.0-alpha3</version>
			</dependency>
			
			<!-- 输出扩展 -->
			
			<!-- HTTP报表
				 Metric也提供了一个servlet (AdminServlet)提供JSON风格的报表。
				   它还提供了单一功能的servlet (MetricsServlet, HealthCheckServlet, ThreadDumpServlet, PingServlet)。
 			-->
			<dependency>
			    <groupId>io.dropwizard.metrics</groupId>
			    <artifactId>metrics-servlets</artifactId>
			    <version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A set of classes which allow you to report metrics via JMX.  -->
			<dependency>
			    <groupId>io.dropwizard.metrics</groupId>
			    <artifactId>metrics-jmx</artifactId>
			    <version>4.0.0-alpha3</version>
			</dependency>
			<!-- A reporter for Metrics which announces measurements to a Graphite server.  -->
			<dependency>
			    <groupId>io.dropwizard.metrics</groupId>
			    <artifactId>metrics-graphite</artifactId>
			    <version>${dropwizard-metrics.version}</version>
			</dependency>
			<!-- A reporter for Metrics which announces measurements to a Ganglia cluster.  -->
			<dependency>
			    <groupId>io.dropwizard.metrics</groupId>
			    <artifactId>metrics-ganglia</artifactId>
			    <version>${dropwizard-metrics.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.coursera/metrics-datadog -->
			<dependency>
				<groupId>org.coursera</groupId>
				<artifactId>metrics-datadog</artifactId>
				<version>1.1.13</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.rabbitmq/amqp-client -->
			<dependency>
				<groupId>com.rabbitmq</groupId>
				<artifactId>amqp-client</artifactId>
				<version>5.0.0</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.librato.metrics/metrics-librato -->
			<dependency>
				<groupId>com.librato.metrics</groupId>
				<artifactId>metrics-librato</artifactId><!--$NO-MVN-MAN-VER$-->
				<version>5.1.0</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.ning/async-http-client -->
			<dependency>
				<groupId>com.ning</groupId>
				<artifactId>async-http-client</artifactId>
				<version>1.9.40</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.palominolabs.metrics/metrics-new-relic -->
			<dependency>
				<groupId>com.palominolabs.metrics</groupId>
				<artifactId>metrics-new-relic</artifactId>
				<version>1.0.5</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.izettle/metrics-influxdb -->
			<dependency>
				<groupId>com.izettle</groupId>
				<artifactId>metrics-influxdb</artifactId>
				<version>1.2.1-rc1</version>
			</dependency>
			<dependency>
				<groupId>org.influxdb</groupId>
				<artifactId>influxdb-java</artifactId>
				<version>2.5</version>
			</dependency>
			<!-- https://github.com/hengyunabc/metrics-kafka -->
			<dependency>
				<groupId>io.github.hengyunabc</groupId>
				<artifactId>metrics-kafka</artifactId>
				<version>0.0.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>1.0.0</version>
			</dependency>
			<!-- https://github.com/hengyunabc/metrics-zabbix -->
			<dependency>
				<groupId>io.github.hengyunabc</groupId>
				<artifactId>metrics-zabbix</artifactId>
				<version>0.0.5</version>
			</dependency>
			<!-- https://github.com/hengyunabc/metrics-zabbix -->
			<dependency>
				<groupId>io.github.hengyunabc</groupId>
				<artifactId>metrics-zabbix</artifactId>
				<version>0.0.5</version>
			</dependency>
			
		</dependencies>
	</dependencyManagement>
	
	<dependencies>

		<!-- Java Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Core starter, including auto-configuration support, logging and YAML -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Spring Boot Test 依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- @ConfigurationProperties annotation processing (metadata for IDEs) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Compile dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>

		<!-- REST的web服务和用于web应用程序的mvc实现 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- SLF4J，即简单日志门面（Simple Logging Facade for Java），不是具体的日志解决方案，它只服务于各种各样 
			的日志系统。按照官方的说法，SLF4J是一个用于日志系统的简单Facade，允许最终用户在部署其应用时使用其所希望的日志系统。 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		
		<!-- ###################### Metrics 3.x ###################### -->

		<!-- https://mvnrepository.com/artifact/io.dropwizard.metrics -->

		<!-- 基础依赖 -->

		<!-- A dependency-less package of just the annotations used by other Metrics 
			modules. -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-annotation</artifactId>
		</dependency>
		<!-- Metrics is a Java library which gives you unparalleled insight into 
			what your code does in production. Metrics provides a powerful toolkit of 
			ways to measure the behavior of critical components in your production environment. -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>
		<!-- An addition to Metrics which provides the ability to run application-specific 
			health checks, allowing you to check your application's heath in production. -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-healthchecks</artifactId>
		</dependency>
		<!-- A set of Jackson modules which provide serializers for most Metrics 
			classes. -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-json</artifactId>
		</dependency>
		
		<!-- 监控扩展 -->
		
		<!-- An instrumented filter for servlet environments. -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-servlet</artifactId>
		</dependency>
		<!-- A set of classes which allow you to monitor critical aspects of your 
			Java Virtual Machine using Metrics. -->
		<dependency>
		    <groupId>io.dropwizard.metrics</groupId>
		    <artifactId>metrics-jvm</artifactId>
		</dependency>

		<!-- 输出扩展 -->

		<!-- HTTP报表 Metric也提供了一个servlet (AdminServlet)提供JSON风格的报表。 它还提供了单一功能的servlet 
			(MetricsServlet, HealthCheckServlet, ThreadDumpServlet, PingServlet)。 -->
		<!-- A set of utility servlets for Metrics, allowing you to expose valuable 
			information about your production environment. -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-servlets</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jmx</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- A reporter for Metrics which announces measurements to a Graphite 
			server. -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-graphite</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- A reporter for Metrics which announces measurements to a Ganglia cluster. -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-ganglia</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.coursera/metrics-datadog -->
		<dependency>
			<groupId>org.coursera</groupId>
			<artifactId>metrics-datadog</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.rabbitmq/amqp-client -->
		<dependency>
			<groupId>com.rabbitmq</groupId>
			<artifactId>amqp-client</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.librato.metrics/metrics-librato -->
		<dependency>
			<groupId>com.librato.metrics</groupId>
			<artifactId>metrics-librato</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.ning/async-http-client -->
		<dependency>
			<groupId>com.ning</groupId>
			<artifactId>async-http-client</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.palominolabs.metrics/metrics-new-relic -->
		<dependency>
			<groupId>com.palominolabs.metrics</groupId>
			<artifactId>metrics-new-relic</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.izettle/metrics-influxdb -->
		<dependency>
			<groupId>com.izettle</groupId>
			<artifactId>metrics-influxdb</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.influxdb</groupId>
			<artifactId>influxdb-java</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- https://github.com/hengyunabc/metrics-kafka -->
		<dependency>
			<groupId>io.github.hengyunabc</groupId>
			<artifactId>metrics-kafka</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- https://github.com/hengyunabc/metrics-zabbix -->
		<dependency>
			<groupId>io.github.hengyunabc</groupId>
			<artifactId>metrics-zabbix</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency> <groupId>org.tinygroup</groupId> <artifactId>org.tinygroup.commons</artifactId> 
			<version>3.2.0</version> </dependency>

		<dependency>
			<groupId>com.ryantenney.metrics</groupId>
			<artifactId>metrics-spring</artifactId>
			<version>3.1.3</version>
		</dependency> -->

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- 编译插件：编译主代码至主输出目录 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<!-- 设置源文件编码方式 -->
					<configuration>
						<defaultLibBundleDir>lib</defaultLibBundleDir>
						<!-- 源代码编译版本 -->
						<source>${java.version}</source>
						<!-- 目标平台编译版本 -->
						<target>${java.version}</target>
						<!-- 字符集编码 -->
						<encoding>${project.build.sourceEncoding}</encoding>
						<!-- -->
						<maxmem>512M</maxmem>
					</configuration>
				</plugin>
				<!-- 资源插件：复制主资源文件至主输出目录 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<!-- 解决资源文件的编码问题 -->
					<configuration>
						<!-- 字符集编码 -->
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
					<!-- 复制测试资源文件至测试输出目录复制resources到test-classess -->
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${basedir}/target/test-classes</outputDirectory>
								<resources>
									<resource>
										<directory>src/main/resources</directory>
										<!--<filtering>true</filtering> -->
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.shared</groupId>
							<artifactId>maven-filtering</artifactId>
							<version>1.3</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- 单元测试插件 ：执行测试用例 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<!-- 跳过单元测试 -->
						<skip>true</skip>
						<skipTests>true</skipTests>
						<!-- forkMode 可设置值有 “never”， “once”， “always” 和 “pertest”。 pretest： 
							每一个测试创建一个新进程，为每个测试创建新的JVM是单独测试的最彻底方式，但也是最慢的，不适合hudson上持续回归。 once：在一个进程中进行所有测试。once为默认设置，在Hudson上持续回归时建议使用默认设置。 
							always：在一个进程中并行的运行脚本，Junit4.7以上版本才可以使用，surefire的版本要在2.6以上提供这个功能，其中 threadCount：执行时，指定可分配的线程数量。只和参数parallel配合使用有效。默认：5。 -->
						<forkMode>once</forkMode>
						<argLine>-Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m</argLine>
						<additionalClasspathElements>
							<additionalClasspathElement>
								${basedir}/target/test-classes
							</additionalClasspathElement>
						</additionalClasspathElements>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/TestBean.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- jar包生成插件 ：创建项目jar包 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<!-- 安装插件：将项目输出构件安装到本地仓库 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
				</plugin>
				<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>
				<!-- 源码插件:发布时自动将源码同时发布 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<!-- 打包source文件为jar文件 -->
					<configuration>
						<testFailureIgnore>true</testFailureIgnore>
						<attach>true</attach>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 文档插件:发布时自动生成文档 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<aggregate>true</aggregate>
						<charset>UTF-8</charset>
						<encoding>${project.build.sourceEncoding}</encoding>
						<docencoding>UTF-8</docencoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- 资源插件：复制主资源文件至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<!-- 编译插件：编译主代码至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- 单元测试插件 ：执行测试用例 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- jar包生成插件 ：创建项目jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<!-- 安装插件：将项目输出构件安装到本地仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			<!-- 源码插件:发布时自动将源码同时发布 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
